<template class="task-template">
    <section id="notifications-section" class="section js-section u-category-native-ui">
        <header class="notifications">
            <div class="section-wrapper">
                <h1>
                    <svg class="section-icon"><use xlink:href="assets/img/icons.svg#icon-notification"></use></svg>
                    桌面通知
                </h1>
                <h3>Electron.NET中的<code>Electron.Notification</code>允许您添加基本桌面通知</h3>
                <p>Electron允许开发人员使用<a href="https://notifications.spec.whatwg.org/">HTML5通知API</a>发送通知，使用当前运行的操作系统的本地通知API来显示它</p>

                <p><b>注意：</b>因为这是一个HTML5 API，所以它只在呈现程序进程中可用。</p>

                <p>您可以在<code>Controllers\NotificationsController.cs</code>中找到示例源代码.</p>
            </div>
        </header>

        <div class="demo">
            <div class="demo-wrapper">
                <button id="basic-notification-demo-toggle" class="js-container-target demo-toggle-button">
                    基本通知
                    <div class="demo-meta u-avoid-clicks">支持: Win 7+, macOS, Linux (支持libnotify)<span class="demo-meta-divider">|</span> 进程: Renderer</div>
                </button>
                <div class="demo-box">
                    <div class="demo-controls">
                        <button class="demo-button" id="basic-noti">查看示例</button>
                    </div>
                    <p>这个演示演示了一个基本的通知。仅文本.</p>
                    <h5>主进程 (C#)</h5>
                    <pre><code class="csharp">var options = new NotificationOptions("Basic Notification", "Short message part")
{
    OnClick = async () => await Electron.Dialog.ShowMessageBoxAsync("Notification clicked")
};

Electron.Notification.Show(options);</code></pre>
                </div>
            </div>
        </div>

        <div class="demo">
            <div class="demo-wrapper">
                <button id="advanced-notification-demo-toggle" class="js-container-target demo-toggle-button">
                    图像通知
                    <div class="demo-meta u-avoid-clicks">支持: Win 7+, macOS, Linux (支持libnotify) <span class="demo-meta-divider">|</span> 进程: Renderer</div>
                </button>
                <div class="demo-box">
                    <div class="demo-controls">
                        <button class="demo-button" id="advanced-noti">查看示例</button>
                    </div>
                    <p>这个演示演示了一个基本的通知。文本和图像</p>
                    <h5>主进程 (C#)</h5>
                    <pre><code class="csharp">var options = new NotificationOptions("Notification with image", "Short message plus a custom image")
{
    OnClick = async () => await Electron.Dialog.ShowMessageBoxAsync("Notification clicked"),
    Icon = "/assets/img/programming.png"
};

Electron.Notification.Show(options);</code></pre>
                </div>
            </div>
        </div>

        <script type="text/javascript">
            (function () {
                const { ipcRenderer } = require("electron");

                document.getElementById("basic-noti").addEventListener("click", () => {
                    ipcRenderer.send("basic-noti");
                });

                document.getElementById("advanced-noti").addEventListener("click", () => {
                    ipcRenderer.send("advanced-noti");
                });

            }());
        </script>

    </section>
</template>
