<template class="task-template">
    <section id="ex-links-file-manager-section" class="section js-section u-category-native-ui">
        <header class="section-header">
            <div class="section-wrapper">
                <h1>
                    <svg class="section-icon"><use xlink:href="assets/img/icons.svg#icon-native-ui"></use></svg>
                    打开外部链接和文件管理器
                </h1>
                <h3>Electron.NET中的<code>Electron.Shell</code>允许您访问某些本机元素，如文件管理器和默认web浏览器</h3>

                <p>此模块在主进程和呈现程序进程中都工作.</p>
                
                <p>您可以在 <code>Controllers\ShellController.cs</code>中找到示例源代码.</p>
            </div>
        </header>

        <div class="demo">
            <div class="demo-wrapper">
                <button id="open-file-manager-demo-toggle" class="js-container-target demo-toggle-button">
                    在文件管理器中打开路径
                    <div class="demo-meta u-avoid-clicks">支持: Win, macOS, Linux <span class="demo-meta-divider">|</span> 进程: Both</div>
                </button>
                <div class="demo-box">
                    <div class="demo-controls">
                        <button class="demo-button" id="open-file-manager">查看示例</button>
                    </div>
                    <p>这演示了如何使用<code>Electron.Shell</code>在特定位置打开系统文件管理器</p>
                    <p>单击“查看示例”按钮将在根目录下打开文件管理器.</p>
                    <h5>主进程 (C#)</h5>
                    <pre><code class="csharp">string path = await Electron.App.GetPathAsync(PathName.home);
await Electron.Shell.ShowItemInFolderAsync(path);</code></pre>
                </div>
            </div>
        </div>

        <div class="demo">
            <div class="demo-wrapper">
                <button id="open-ex-links-demo-toggle" class="js-container-target demo-toggle-button">
                    打开外部链接
                    <div class="demo-meta u-avoid-clicks">支持: Win, macOS, Linux <span class="demo-meta-divider">|</span> 进程: Both</div>
                </button>
                <div class="demo-box">
                    <div class="demo-controls">
                        <button class="demo-button" id="open-ex-links">查看示例</button>
                    </div>
                    <p>如果不希望网页在<em>当前程序中</em>打开网站链接，可以使用<code>Electron.Shell</code>在外部打开它们。单击后，链接将在应用程序外部和用户的默认web浏览器中打开</p>
                    <p>当点击“查看示例”按钮时，electron网站将在您的浏览器中打开.<p>
                        <h5>主进程 (C#)</h5>
                        <pre><code class="csharp">await Electron.Shell.OpenExternalAsync("https://github.com/ElectronNET");</code></pre>
            </div>
        </div>
        </div>
        
        <script>
            (function(){
                const { ipcRenderer } = require("electron");
                
                document.getElementById("open-file-manager").addEventListener("click", () => {
                    ipcRenderer.send("open-file-manager");
                });

                document.getElementById("open-ex-links").addEventListener("click", () => {
                    ipcRenderer.send("open-ex-links");
                });

            }());
        </script>


    </section>
</template>
